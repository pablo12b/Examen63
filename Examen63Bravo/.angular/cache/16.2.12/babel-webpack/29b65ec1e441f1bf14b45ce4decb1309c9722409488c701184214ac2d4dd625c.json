{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/recarga.service\";\nimport * as i2 from \"@angular/common\";\nfunction RecargasMostrarComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rec_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rec_r1.cliente == null ? null : rec_r1.cliente.codigo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rec_r1.cliente == null ? null : rec_r1.cliente.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rec_r1.fecha);\n  }\n}\nexport class RecargasMostrarComponent {\n  constructor(recargaService) {\n    this.recargaService = recargaService;\n  } // Inyecta tu servicio aquí\n  ngOnInit() {\n    this.recargaService.getRecargas(this.codigoAutenticada).subscribe(detalles => {\n      // Hacer una copia del array de detalles para no mutar el original\n      this.detalles = [...detalles];\n    }, error => {\n      console.error('Error al obtener detalles', error);\n    });\n  }\n  static #_ = this.ɵfac = function RecargasMostrarComponent_Factory(t) {\n    return new (t || RecargasMostrarComponent)(i0.ɵɵdirectiveInject(i1.RecargaService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecargasMostrarComponent,\n    selectors: [[\"app-recargas-mostrar\"]],\n    decls: 12,\n    vars: 3,\n    consts: [[1, \"order-details\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function RecargasMostrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\");\n        i0.ɵɵtext(4, \"Codigo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"th\");\n        i0.ɵɵtext(6, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"Fecha\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"tbody\");\n        i0.ɵɵtemplate(10, RecargasMostrarComponent_tr_10_Template, 7, 3, \"tr\", 1);\n        i0.ɵɵpipe(11, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 1, ctx.recargas));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","rec_r1","cliente","codigo","nombre","fecha","RecargasMostrarComponent","constructor","recargaService","ngOnInit","getRecargas","codigoAutenticada","subscribe","detalles","error","console","_","ɵɵdirectiveInject","i1","RecargaService","_2","selectors","decls","vars","consts","template","RecargasMostrarComponent_Template","rf","ctx","ɵɵtemplate","RecargasMostrarComponent_tr_10_Template","ɵɵproperty","ɵɵpipeBind1","recargas"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\Examen63\\Examen63Bravo\\src\\app\\pages\\recargas-mostrar\\recargas-mostrar.component.ts","C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\Examen63\\Examen63Bravo\\src\\app\\pages\\recargas-mostrar\\recargas-mostrar.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RecargaService } from 'src/app/services/recarga.service';\n\n@Component({\n  selector: 'app-recargas-mostrar',\n  templateUrl: './recargas-mostrar.component.html',\n  styleUrls: ['./recargas-mostrar.component.css']\n})\nexport class RecargasMostrarComponent implements OnInit{\n  recargas: any\n\n  constructor(private recargaService: RecargaService) { } // Inyecta tu servicio aquí\n\n  ngOnInit(): void {\n    this.recargaService.getRecargas(this.codigoAutenticada).subscribe(\n      (detalles) => {\n        // Hacer una copia del array de detalles para no mutar el original\n        this.detalles = [...detalles];\n      },\n      (error) => {\n        console.error('Error al obtener detalles', error);\n      }\n    );\n  }\n\n}\n","<table class=\"order-details\">\n    <thead>\n    <tr>\n        <th>Codigo</th>\n        <th>Nombre</th>\n        <th>Fecha</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let rec of recargas | async\">\n        <td>{{ rec.cliente?.codigo }}</td>\n        <td>{{ rec.cliente?.nombre }}</td>\n        <td>{{ rec.fecha }}</td>\n    </tr>\n    </tbody>\n</table>"],"mappings":";;;;;ICSIA,EAAA,CAAAC,cAAA,SAAyC;IACjCD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAClCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAClCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAe;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAFpBH,EAAA,CAAAI,SAAA,GAAyB;IAAzBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,OAAA,kBAAAD,MAAA,CAAAC,OAAA,CAAAC,MAAA,CAAyB;IACzBR,EAAA,CAAAI,SAAA,GAAyB;IAAzBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,OAAA,kBAAAD,MAAA,CAAAC,OAAA,CAAAE,MAAA,CAAyB;IACzBT,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAI,KAAA,CAAe;;;ADJ3B,OAAM,MAAOC,wBAAwB;EAGnCC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAoB,CAAC,CAAC;EAExDC,QAAQA,CAAA;IACN,IAAI,CAACD,cAAc,CAACE,WAAW,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAACC,SAAS,CAC9DC,QAAQ,IAAI;MACX;MACA,IAAI,CAACA,QAAQ,GAAG,CAAC,GAAGA,QAAQ,CAAC;IAC/B,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBAfUV,wBAAwB,EAAAX,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAxBd,wBAAwB;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRrChC,EAAA,CAAAC,cAAA,eAA6B;QAGjBD,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACfH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACfH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGlBH,EAAA,CAAAC,cAAA,YAAO;QACPD,EAAA,CAAAkC,UAAA,KAAAC,uCAAA,gBAIK;;QACLnC,EAAA,CAAAG,YAAA,EAAQ;;;QALYH,EAAA,CAAAI,SAAA,IAAmB;QAAnBJ,EAAA,CAAAoC,UAAA,YAAApC,EAAA,CAAAqC,WAAA,QAAAJ,GAAA,CAAAK,QAAA,EAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}