{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/cliente.service\";\nexport class ClienteComponent {\n  constructor(formBuilder, clienteService) {\n    this.formBuilder = formBuilder;\n    this.clienteService = clienteService;\n    this.signUpForm = this.formBuilder.group({\n      nombre: ['', Validators.required],\n      dni: ['', Validators.required, Validators.min(0), Validators.max(10)],\n      saldo: [0, [Validators.required, Validators.min(0)]]\n    });\n  }\n  onSubmit() {\n    if (this.signUpForm.valid) {\n      const cliente = this.signUpForm.value;\n      /*this.clienteService.saveClientes(cliente).subscribe(\n        response => {\n          console.log('Registro exitoso', response);\n          this.authService.setUsuarioAutenticado(response);\n          // Aquí puedes manejar la respuesta del servidor, como redirigir al usuario o mostrar un mensaje de éxito\n          this.router.navigate(['/paginas/login']);\n        },\n        error => {\n          console.error('Error al registrar el cliente', error);\n          // Aquí puedes manejar errores, como mostrar un mensaje al usuario\n        }\n      );*/\n    }\n  }\n  static #_ = this.ɵfac = function ClienteComponent_Factory(t) {\n    return new (t || ClienteComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ClienteService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClienteComponent,\n    selectors: [[\"app-cliente\"]],\n    decls: 31,\n    vars: 2,\n    consts: [[1, \"signup-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"nombre\"], [\"id\", \"nombre\", \"formControlName\", \"nombre\", \"type\", \"text\", \"placeholder\", \"Nombre completo\", \"required\", \"\"], [\"for\", \"dni\"], [\"id\", \"dni\", \"formControlName\", \"dni\", \"type\", \"text\", \"placeholder\", \"C\\u00E9dula\", \"required\", \"\"], [\"for\", \"direccion\"], [\"id\", \"direccion\", \"formControlName\", \"direccion\", \"type\", \"text\", \"placeholder\", \"Direcci\\u00F3n\", \"required\", \"\"], [\"for\", \"saldo\"], [\"id\", \"saldo\", \"formControlName\", \"saldo\", \"type\", \"number\", \"placeholder\", \"Saldo inicial\", \"required\", \"\"], [\"for\", \"usuario\"], [\"id\", \"usuario\", \"formControlName\", \"usuario\", \"type\", \"text\", \"placeholder\", \"Usuario\", \"required\", \"\"], [\"for\", \"contras\"], [\"id\", \"contras\", \"formControlName\", \"contras\", \"type\", \"password\", \"placeholder\", \"Contrase\\u00F1a\", \"required\", \"\"], [1, \"form-actions\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function ClienteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Registrarse\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ClienteComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Nombre completo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"C\\u00E9dula:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Direcci\\u00F3n:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Saldo inicial:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\", 11);\n        i0.ɵɵtext(22, \"Usuario:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2)(25, \"label\", 13);\n        i0.ɵɵtext(26, \"Contrase\\u00F1a:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 15)(29, \"button\", 16);\n        i0.ɵɵtext(30, \"Registrarse\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"disabled\", !ctx.signUpForm.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","ClienteComponent","constructor","formBuilder","clienteService","signUpForm","group","nombre","required","dni","min","max","saldo","onSubmit","valid","cliente","value","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ClienteService","_2","selectors","decls","vars","consts","template","ClienteComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ClienteComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\Examen63\\Examen63Bravo\\src\\app\\pages\\cliente\\cliente.component.ts","C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\Examen63\\Examen63Bravo\\src\\app\\pages\\cliente\\cliente.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Cliente } from 'src/app/domain/cliente';\nimport { ClienteService } from 'src/app/services/cliente.service';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css']\n})\nexport class ClienteComponent {\n  signUpForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private clienteService: ClienteService) {\n    this.signUpForm = this.formBuilder.group({\n      nombre: ['', Validators.required],\n      dni: ['', Validators.required, Validators.min(0), Validators.max(10)],\n      saldo: [0, [Validators.required, Validators.min(0)]],\n    });\n  }\n\n  onSubmit() {\n    if (this.signUpForm.valid) {\n      const cliente: Cliente = this.signUpForm.value;\n      /*this.clienteService.saveClientes(cliente).subscribe(\n        response => {\n          console.log('Registro exitoso', response);\n          this.authService.setUsuarioAutenticado(response);\n          // Aquí puedes manejar la respuesta del servidor, como redirigir al usuario o mostrar un mensaje de éxito\n          this.router.navigate(['/paginas/login']);\n        },\n        error => {\n          console.error('Error al registrar el cliente', error);\n          // Aquí puedes manejar errores, como mostrar un mensaje al usuario\n        }\n      );*/\n    }\n  }\n}\n","<div class=\"signup-container\">\n    <h2>Registrarse</h2>\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"nombre\">Nombre completo:</label>\n        <input id=\"nombre\" formControlName=\"nombre\" type=\"text\" placeholder=\"Nombre completo\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"dni\">Cédula:</label>\n        <input id=\"dni\" formControlName=\"dni\" type=\"text\" placeholder=\"Cédula\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"direccion\">Dirección:</label>\n        <input id=\"direccion\" formControlName=\"direccion\" type=\"text\" placeholder=\"Dirección\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"saldo\">Saldo inicial:</label>\n        <input id=\"saldo\" formControlName=\"saldo\" type=\"number\" placeholder=\"Saldo inicial\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"usuario\">Usuario:</label>\n        <input id=\"usuario\" formControlName=\"usuario\" type=\"text\" placeholder=\"Usuario\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"contras\">Contraseña:</label>\n        <input id=\"contras\" formControlName=\"contras\" type=\"password\" placeholder=\"Contraseña\" required>\n      </div>\n      <div class=\"form-actions\">\n        <button type=\"submit\" [disabled]=\"!signUpForm.valid\">Registrarse</button>\n      </div>\n    </form>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}