{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/cliente.service\";\nexport class RecargaComponent {\n  constructor(formBuilder, clienteService) {\n    this.formBuilder = formBuilder;\n    this.clienteService = clienteService;\n    this.loginForm = this.formBuilder.group({\n      usuario: ['', Validators.required],\n      contras: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    /*if (this.loginForm.valid) {\n      const usuario = this.loginForm.value.usuario;\n      const contras = this.loginForm.value.contras;\n      // Realizar la llamada al servicio y suscribirse para manejar la respuesta\n      this.clienteService.getVerificarClientes(usuario, contras).subscribe(\n        response => {\n          console.log('Inicio de sesión exitoso', response);\n          this.router.navigate(['/paginas/inicio']); // Redirige al usuario a la página de inicio\n        },\n        error => {\n          console.error('Error al iniciar sesión', error);\n          // Manejar aquí el error, por ejemplo, mostrando un mensaje al usuario\n        }\n      );\n    }\n    }\n     }\n     \n    }\n    static { this.ɵfac = function RecargaComponent_Factory(t) { return new (t || RecargaComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ClienteService)); }; }\n    static { this.ɵcmp = /*@__PURE__*/\n    i0.ɵɵdefineComponent({\n      type: RecargaComponent,\n      selectors: [[\"app-recarga\"]],\n      decls: 15,\n      vars: 2,\n      consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"usuario\"], [\"id\", \"usuario\", \"formControlName\", \"usuario\", \"type\", \"text\", \"placeholder\", \"Usuario\", \"required\", \"\"], [\"for\", \"contras\"], [\"id\", \"contras\", \"formControlName\", \"contras\", \"type\", \"password\", \"placeholder\", \"Contrase\\u00F1a\", \"required\", \"\"], [1, \"form-actions\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function RecargaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Iniciar Sesi\\u00F3n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function RecargaComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Usuario:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Contrase\\u00F1a:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 7)(13, \"button\", 8);\n          i0.ɵɵtext(14, \"Iniciar Sesi\\u00F3n\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","RecargaComponent","constructor","formBuilder","clienteService","loginForm","group","usuario","required","contras","onSubmit","selectors","decls","vars","consts","template","RecargaComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RecargaComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","valid"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\Examen63\\Examen63Bravo\\src\\app\\pages\\recarga\\recarga.component.ts","C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\Examen63\\Examen63Bravo\\src\\app\\pages\\recarga\\recarga.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ClienteService } from 'src/app/services/cliente.service';\n\n@Component({\n  selector: 'app-recarga',\n  templateUrl: './recarga.component.html',\n  styleUrls: ['./recarga.component.css']\n})\nexport class RecargaComponent {\n  loginForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private clienteService: ClienteService) { // Inyecta Router aquí\n    this.loginForm = this.formBuilder.group({\n      usuario: ['', Validators.required],\n      contras: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    /*if (this.loginForm.valid) {\n      const usuario = this.loginForm.value.usuario;\n      const contras = this.loginForm.value.contras;\n      // Realizar la llamada al servicio y suscribirse para manejar la respuesta\n      this.clienteService.getVerificarClientes(usuario, contras).subscribe(\n        response => {\n          console.log('Inicio de sesión exitoso', response);\n          this.router.navigate(['/paginas/inicio']); // Redirige al usuario a la página de inicio\n        },\n        error => {\n          console.error('Error al iniciar sesión', error);\n          // Manejar aquí el error, por ejemplo, mostrando un mensaje al usuario\n        }\n      );\n    }\n  }\n\n}\n","<div class=\"login-container\">\n    <h2>Iniciar Sesión</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"usuario\">Usuario:</label>\n        <input id=\"usuario\" formControlName=\"usuario\" type=\"text\" placeholder=\"Usuario\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"contras\">Contraseña:</label>\n        <input id=\"contras\" formControlName=\"contras\" type=\"password\" placeholder=\"Contraseña\" required>\n      </div>\n      <div class=\"form-actions\">\n        <button type=\"submit\" [disabled]=\"!loginForm.valid\">Iniciar Sesión</button>\n      </div>\n    </form>\n</div>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,WAAwB,EAAUC,cAA8B;IAAhE,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,cAAc,GAAdA,cAAc;IAClE,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtCC,OAAO,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAClCC,OAAO,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ;KAClC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN;;;;;;;;;;;;;;;;;;;;;;YAXST,gBAAgB;MAAAU,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT7BE,EAAA,CAAAC,cAAA,aAA6B;UACrBD,EAAA,CAAAE,MAAA,0BAAc;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACvBH,EAAA,CAAAC,cAAA,cAAsD;UAAxBD,EAAA,CAAAI,UAAA,sBAAAC,mDAAA;YAAA,OAAYN,GAAA,CAAAR,QAAA,EAAU;UAAA,EAAC;UACnDS,EAAA,CAAAC,cAAA,aAAwB;UACDD,EAAA,CAAAE,MAAA,eAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACrCH,EAAA,CAAAM,SAAA,eAAyF;UAC3FN,EAAA,CAAAG,YAAA,EAAM;UACNH,EAAA,CAAAC,cAAA,aAAwB;UACDD,EAAA,CAAAE,MAAA,wBAAW;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACxCH,EAAA,CAAAM,SAAA,gBAAgG;UAClGN,EAAA,CAAAG,YAAA,EAAM;UACNH,EAAA,CAAAC,cAAA,cAA0B;UAC4BD,EAAA,CAAAE,MAAA,2BAAc;UAAAF,EAAA,CAAAG,YAAA,EAAS;;;UAVzEH,EAAA,CAAAO,SAAA,GAAuB;UAAvBP,EAAA,CAAAQ,UAAA,cAAAT,GAAA,CAAAb,SAAA,CAAuB;UAUHc,EAAA,CAAAO,SAAA,IAA6B;UAA7BP,EAAA,CAAAQ,UAAA,cAAAT,GAAA,CAAAb,SAAA,CAAAuB,KAAA,CAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}